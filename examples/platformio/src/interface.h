// Метод, вызывается при открытии веб интерфейса.
void interface() {
  // Заголовок новой страницы
  crm.page("&#xe802; Главная");

  crm.addReplause(1,"Заголовок");

  //Разделитель
  //crm.output({[Тип], ["Размер в px"], ["Отступы, смотри свойство: margin html"]});
  crm.output({OUTPUT_HR, "1px", "20px 10% -31px"});

  // Вывод значений в виде таблицы
  // crm.output({[Тип], ["ID"], ["Заголовок"], ["Значение при загрузке страницы"], ["цвет в HEX формате"]});
  crm.output({OUTPUT_TABL, "t2", "Заголовок 2", "222", "0f0"});
  crm.output({OUTPUT_TABL, "t3", "$1 3", "333"});
  crm.output({OUTPUT_TABL, "t4", "$1 4", "444", "f0f"});
  crm.output({OUTPUT_HR, "1px", "-3px 10% 0"});

  // График
  // Тип: CHART_L - линии, CHART_B - бары (столбики)
  // Данные: [] - сохранять значения при навигации по разделам; "" - не сохранять
  //crm.chart({ [Тип], ["ID"], ["Заголовок"], ["[Массив заголовков]"], ["[Данные]"], ["цвет в HEX формате"], ["высота графика"] });
  crm.chart({CHART_L, "rssi", "WiFi RSSI", "[1,2,3,4,5]",  "[1,2,3,4,5]", "#00dd00", "250"});

  // Дуговые индикаторы
  // Тип: GAUDE_1 - со стрелкой, GAUDE_2 - без стрелки
  // crm.gauge({[Тип], "[ID]", "[Заголовок]", [Min, шкала], [Max шкала], [Значение при загрузке], {[Цветовая палитра]}, ["Единицы измерения"], [Группировка]});
  crm.gauge({GAUDE_1, "G_0", "WiFi RSSI", -100, -40, (float)WiFi.RSSI(),
    {
      {"#FF0000", "0.0"},   // 0.0 = 0%, 1.0 = 100%
      {"#FFFF00", "0.5"},   // Цвет, расположение на шкале, в формате HEX
      {"#00FF00", "1.0"}    // Количество не больше 6
    }, "dBi"
  });
  crm.gauge({GAUDE_1, "G_1", "Температура", -20, 80, 0,
    {
      {"#FF0000", "-20", "5"},   // Указываются конкретные значения
      {"#FFFF00", "6", "12"},    // Цвет, начало заны, конец зоны, в формате HEX
      {"#00FF00", "13", "24"},   // Количество не больше 6
      {"#FFFF00", "25", "30"},   //
      {"#FF0000", "31", "60"},   //
      {"#FF0000", "62", "80"}    //
    }, "°C",                     // Единицы измерения
    true                         // Группировать с предыдущим, def = false
  });
  crm.gauge({GAUDE_2, "G_2", "Влажность", 0, 100, 35,
    {
      {"#FF0000", "0.0"},        // 0.0 = 0%, 1.0 = 100%
      {"#FF0000", "0.3"},        // Цвет, расположение на шкале, в формате HEX
      {"#FFFF00", "0.7"},        // Количество не больше 6
      {"#00FF00", "1.0"}         //
    }, "%",                      // Единицы измерения
    true                         // Группировать с предыдущим, def = false
  });

  // Плитки / Карточки
  //
  // Переключатель
  // crm.card({[Тип], ["ID"], ["Заголовок"], ["Значение по умолчанию"], ["Значок"], ["цвет в HEX формате"], [Новая группа]});
  // Значок указывается из списка icon.pdf, в формате [&#[CODE]];  без 0
  // Состояние автоматический не сохраняется в память
  crm.card({CARD_CHECKBOX, "card1", "Мотор", FALSE, "&#xf2c5;", "aaa"});

  // Плитки с графиком
  // Тип: CARD_CHART_L - линии, CARD_CHART_B - бары (столбики)
  // Данные: [] - сохранять значения при навигации по разделам; "" - не сохранять
  // crm.card({[Тип], ["ID"], ["Заголовок"], ["[Массив заголовков]"], ["[Данные]"], ["цвет в HEX формате"], [Новая группа]]});
  crm.card({CARD_CHART_B, "rssiraw", "WiFi RSSI RAW", "[]",  "[]", "#dddd00"});

  // Кнопка
  // crm.card({[Тип], ["ID"], ["Заголовок"], ["Значение по умолчанию"], ["Значок"], ["Цвет"], [Новая группа]});
  crm.card({CARD_BUTTON, "card3", "Дверь 3", (st3 ? "Открыта" : "Закрыта"), "&#xe802;", "0ab", true});
  crm.card({CARD_BUTTON, "card4", "Дверь 4", (st4 ? "Открыта" : "Закрыта"), "&#xe802;", "#a0b"});
  crm.card({CARD_BUTTON, "card5", "Дверь 5", (st5 ? "Открыта" : "Закрыта"), "&#xe805;", "#0ab"});

  // Использование значков: &#[код];
  // Пример:  &#xf1c9;
  String txt = F("&#xf1c9; In computer science, an array data structure, or simply an array, is a data structure consisting of a collection of elements (values or variables), each identified by at least one array index or key. &#xf1c9; An array is stored such that the position of each element can be computed from its index tuple by a mathematical formula.[1][2][3] The simplest type of data structure is a linear array, also called one-dimensional array.");

  // Текстовое поле справка
  //crm.output({[Тип], ["ID"], "["Заголовок"]", ["Текст"], ["цвет в HEX формате"]});
  crm.output({OUTPUT_TEXT, "t1", "Любой текст", txt, "#ff5"});
    crm.output({OUTPUT_TEXT, "", "", "Текст по центру", ";color:#0f0;text-align:center;"});

  // Кнопки
  // crm.input({[Тип], ["ID"], ["Заголовок / значок"], ["Внутренние отступы, смотри: padding html"], ["r - вряд"], ["Размер"]});
  crm.input({INPUT_BUTTON, "b1", "&#xe816;", "10px 11px 10px 15px", "r", "55"});
  crm.input({INPUT_BUTTON, "b2", "&#xe811;", "10px", "r", ""});
  crm.input({INPUT_BUTTON, "b3", "&#xe812;", "10px 30px 10px 15px", "r", "45"});
  crm.input({INPUT_BUTTON, "b4", "&#xe815;", "30px 11px 10px 15px", "r", "35"});


  crm.page("&#xf1de; Настройки");
  // Поле выбора (селект)
   // crm.select({[Тип], ["ID"], ["Заголовок / значок"], ["Значение по умолчанию"], ["Значения {{A:1},{B:2},{N:n}}] });
  crm.select({INPUT_SELECT_PIECE_UP,"select4", "Обновление без конфига", String(select4), {{"Отправить 0", "0"}, {"Отправить 1", "1"}}});
  // crm.select({["ID"], ["Заголовок / значок"], ["Значение по умолчанию"], ["Значения {{A:1},{B:2},{N:n}}] });
  crm.select({"select1", "Доп. опции", "0", {{"Скрыть", "0"}, {"Показать", "1"}}});
  // Получить значение из конфига
  // crm.var(["ID переменной"])
  if (crm.var("select1") == "1") {
    // Поля ввода даты времени
    // crm.input({[Тип], ["ID"], ["Заголовок"]});
    crm.input({INPUT_DATE, "date1", "Дата"});
    crm.input({INPUT_TIME, "time1", "Время"});
    crm.input({INPUT_DATETIME, "datetime", "Дата и Время"});

    // Поле ввода текста и цифр, поддерживает паттерн, смотри в интернете.
    // crm.input({[Тип], ["ID"], ["Заголовок / значок"], ["Значение по умолчанию"], ["паттерн, смотри в инете"]});
    crm.input({INPUT_TEXT, "input1", "Текст (паттерн)", "145", "[0-9]{1,8}"});
    crm.input({INPUT_TEXT, "input2", "Шаблон температурыe", "Температура %T1"});
    crm.input({INPUT_NUMBER, "num1", "Только цыфры", "123"});
    crm.input({INPUT_PASSWORD, "pass1", "Пароль", "123456"});
  }

  // Поле ввода адреса электронной почты, цвета, переключателя (чекбокс).
  // crm.input({[Тип], ["ID"], ["Заголовок"], ["Значение по умолчанию"] });
  crm.input({INPUT_EMAIL, "email", "Мыло", "test@mail.ru"});
  crm.input({INPUT_COLOR, "input3", "Цвет", "#FF22FF"});

  // crm.input({[Тип], ["ID"], ["Заголовок"], ["Значение по умолчанию"], ["Обновление интерфейса: 1"] });
  crm.input({INPUT_CHECKBOX, "chk1", "Кнопка перезагрузки", FALSE, "1"});
  crm.input({INPUT_CHECKBOX, "chk2", "Подсветка", "true"});

  // Смотри выше ^
  crm.output({OUTPUT_TEXT, "t11", "", txt, "#5f5"});

  // Разделитель заголовок
  // crm.output({ [Тип], ["ID"], ["Заголовок"], ["Выравнивание"], ["#Цвет RGB"], ["Размер px"] });
  // Выравнивание: left, center, right;
  // Если не заменять заголовок через webUpdate, поле ID можно оставить пустым.
  crm.output({OUTPUT_LABEL, "lb1", "Ползунки", "left", "#0f0", "20"});

  // Ползунок
  // crm.range({["ID"], ["Заголовок"], ["Значение по умолчанию"], ["MIN"], ["MAX"], [Шаг], ["Единицы измерения"]});
  crm.range({"range1", "Громкость", 12, 0, 84, 1});						//Без единиц измерения
  crm.range({"range2", "Яркость", 52, 0, 84, 1, " попугаея"});	//С единицами измерения
  if (crm.var("chk1") == "1") crm.input({INPUT_BUTTON, "reboot", "&#xe810;", "8px 9px 8px 14px", "row", "50"});

  crm.page("<z class='zanim'>&#xe82b;</z> Wi-Fi");
  // форма с полями для WiFi
  // crm.wifiForm([Режим работы], ["Название ТД"], ["Пароль ТД"], ["WiFi сеть для подключения", ["Пароль сети"], ["Время ожидания подключения"]]);
  // Режим работы: WIFI_AP - точка доступа, WIFI_STA - клиент, WIFI_AP_STA - ТД + Клиент
  crm.wifiForm(WIFI_AP, "MY-AP");
  crm.input({INPUT_BUTTON, "reboot", "Перезагрузить"});
}